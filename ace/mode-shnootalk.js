ace.define("ace/mode/shnootalk_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/text_highlight_rules"],function(e,t,n){"use strict";var r=e("../lib/oop"),i=e("./text_highlight_rules").TextHighlightRules,s=function(){this.$rules={start:[{token:"comment.line.number-sign.shnootalk",regex:/#[^\n\r]*/,comment:"Single line comment"},{token:"keyword.control.shnootalk",regex:/\b(?:use|as|from|begin|end|if|elif|else|while|do|for|loop|break|continue|return|void)\b/,comment:"Keywords"},{token:"keyword.operator.shnootalk",regex:/\b(?:and|or|not)\b/,comment:"Conditional operators"},{token:"string.quoted.double.shnootalk",regex:/"/,push:[{token:"string.quoted.double.shnootalk",regex:/"/,next:"pop"},{token:"constant.character.escape.shnootalk",regex:/\\./},{defaultToken:"string.quoted.double.shnootalk"}],comment:"String literal"},{token:"constant.numeric.integer.hexadecimal.shnootalk",regex:/\b0x[a-fA-f0-9]+\b/,comment:"Hex literal"},{token:"constant.numeric.shnootalk",regex:/\b0b[0-1]+\b/,comment:"Bin literal"},{token:"constant.numeric.shnootalk",regex:/\b[0-9]*\.[0-9]+\b/,comment:"Float literal"},{token:"string.quoted.single.shnootalk",regex:/'\\?.'/,comment:"Character literal"},{token:"constant.numeric.shnootalk",regex:/\b[0-9]+\b/,comment:"Integer literal"},{token:"constant.language.boolean.shnootalk",regex:/\b(?:true|false)\b/,comment:"Boolean literal"},{token:"storage.type.shnootalk",regex:/\b(?:var|const|mut)\b/,comment:"Declaration type"},{token:"storage.type.shnootalk",regex:/\b(?:fn|extfn)\b/,comment:"'fn' keyword"},{token:["entity.name.function.shnootalk","text"],regex:/\b([a-zA-Z_][a-zA-Z0-9_]*)\b(\()/,comment:"Function name"},{token:["storage.type.shnootalk","text","entity.name.type.shnootalk"],regex:/\b(struct|class)(\s+)([a-zA-Z_][a-zA-Z0-9_]*)\b/,push:[{token:"text",regex:/[\{\(;]/,next:"pop"}],comment:"User defined type definition"},{token:"storage.type.shnootalk",regex:/\b(?:enum|def)\b/,comment:"Used defined enum and def"},{token:["entity.name.scope-resolution.shnootalk","text"],regex:/([a-zA-Z_][a-zA-Z0-9_]*)(::)/,comment:"Module scope"},{token:"text",regex:/(?:->|\:)/,next:"type",comment:"Type"},{token:["entity.name.type.shnootalk","text","text"],regex:/\b([a-zA-Z_][a-zA-Z0-9_]*)(\s*)(\[\]`|\*`|`)/,comment:"Cast type"},{token:"variable.name.shnootalk",regex:/\b[a-zA-Z_][a-zA-Z0-9_]*\b/,comment:"Symbol or identifier"}],type:[{token:["entity.name.scope-resolution.shnootalk","text"],regex:/([a-zA-Z_][a-zA-Z0-9_]*)(::)/,comment:"Module scope"},{token:"entity.name.type.shnootalk",regex:/\b[a-zA-Z_][a-zA-Z0-9_]*\b/,comment:"Symbol or identifier",next:"start"}]},this.normalizeRules()};s.metaData={$schema:"https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",name:"ShnooTalk",scopeName:"source.shnootalk"},r.inherits(s,i),t.ShnooTalkHighlightRules=s}),ace.define("ace/mode/folding/cstyle",["require","exports","module","ace/lib/oop","ace/range","ace/mode/folding/fold_mode"],function(e,t,n){"use strict";var r=e("../../lib/oop"),i=e("../../range").Range,s=e("./fold_mode").FoldMode,o=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\|[^|]*?$/,"|"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\|[^|]*?$/,"|"+e.end)))};r.inherits(o,s),function(){this.foldingStartMarker=/([\{\[\(])[^\}\]\)]*$|^\s*(\/\*)/,this.foldingStopMarker=/^[^\[\{\(]*([\}\]\)])|^[\s\*]*(\*\/)/,this.singleLineBlockCommentRe=/^\s*(\/\*).*\*\/\s*$/,this.tripleStarBlockCommentRe=/^\s*(\/\*\*\*).*\*\/\s*$/,this.startRegionRe=/^\s*(\/\*|\/\/)#?region\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var r=e.getLine(n);if(this.singleLineBlockCommentRe.test(r)&&!this.startRegionRe.test(r)&&!this.tripleStarBlockCommentRe.test(r))return"";var i=this._getFoldWidgetBase(e,t,n);return!i&&this.startRegionRe.test(r)?"start":i},this.getFoldWidgetRange=function(e,t,n,r){var i=e.getLine(n);if(this.startRegionRe.test(i))return this.getCommentRegionBlock(e,i,n);var s=i.match(this.foldingStartMarker);if(s){var o=s.index;if(s[1])return this.openingBracketBlock(e,s[1],n,o);var u=e.getCommentFoldRange(n,o+s[0].length,1);return u&&!u.isMultiLine()&&(r?u=this.getSectionRange(e,n):t!="all"&&(u=null)),u}if(t==="markbegin")return;var s=i.match(this.foldingStopMarker);if(s){var o=s.index+s[0].length;return s[1]?this.closingBracketBlock(e,s[1],n,o):e.getCommentFoldRange(n,o,-1)}},this.getSectionRange=function(e,t){var n=e.getLine(t),r=n.search(/\S/),s=t,o=n.length;t+=1;var u=t,a=e.getLength();while(++t<a){n=e.getLine(t);var f=n.search(/\S/);if(f===-1)continue;if(r>f)break;var l=this.getFoldWidgetRange(e,"all",t);if(l){if(l.start.row<=s)break;if(l.isMultiLine())t=l.end.row;else if(r==f)break}u=t}return new i(s,o,u,e.getLine(u).length)},this.getCommentRegionBlock=function(e,t,n){var r=t.search(/\s*$/),s=e.getLength(),o=n,u=/^\s*(?:\/\*|\/\/|--)#?(end)?region\b/,a=1;while(++n<s){t=e.getLine(n);var f=u.exec(t);if(!f)continue;f[1]?a--:a++;if(!a)break}var l=n;if(l>o)return new i(o,r,l,t.length)}}.call(o.prototype)}),ace.define("ace/mode/shnootalk",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/shnootalk_highlight_rules","ace/mode/folding/cstyle"],function(e,t,n){"use strict";var r=e("../lib/oop"),i=e("./text").Mode,s=e("./shnootalk_highlight_rules").ShnooTalkHighlightRules,o=e("./folding/cstyle").FoldMode,u=function(){this.HighlightRules=s,this.foldingRules=new o};r.inherits(u,i),function(){this.lineCommentStart="#",this.$id="ace/mode/shnootalk"}.call(u.prototype),t.Mode=u});                (function() {
                    ace.require(["ace/mode/shnootalk"], function(m) {
                        if (typeof module == "object" && typeof exports == "object" && module) {
                            module.exports = m;
                        }
                    });
                })();
            